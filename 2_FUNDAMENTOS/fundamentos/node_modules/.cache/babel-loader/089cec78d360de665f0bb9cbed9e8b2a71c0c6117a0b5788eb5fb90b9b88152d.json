{"ast":null,"code":"var _jsxFileName = \"/Users/gustavosilva/Documents/Estudos/React_Udemy/2_FUNDAMENTOS/fundamentos/src/componentes/Events.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Events = () => {\n  const handleMyEvent = events => {\n    console.log('Eventos: ', events);\n    console.log('Ativou o evento');\n  };\n  const renderSomething = x => {\n    if (x) {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Posso renderizar isso\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 20\n      }, this);\n    } else {\n      return /*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \" Posso render isso aqui tamb\\xE9m\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 20\n      }, this);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleMyEvent,\n        children: \"Clique\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          console.log('Clicou aqui mesmo');\n        },\n        children: \"Clique aqui\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: () => {\n          //Com uma funcão dentro, começa deixar o código bagunçado, o ideal seria dividir com uma funções fora a lógica.\n          if (true) {\n            console.log('Clicou aqui porque pedi com educação');\n          }\n        },\n        children: \"Por favor clique aqui\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 13\n    }, this), renderSomething(true) /* Como eu quero que já execute assim que for carregado eu ja coloco o '()' junto a função*/, renderSomething(false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 9\n  }, this);\n};\n_c = Events;\nexport default Events;\nvar _c;\n$RefreshReg$(_c, \"Events\");","map":{"version":3,"names":["Events","handleMyEvent","events","console","log","renderSomething","x","_jsxDEV","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["/Users/gustavosilva/Documents/Estudos/React_Udemy/2_FUNDAMENTOS/fundamentos/src/componentes/Events.js"],"sourcesContent":["\nconst Events = () => {\n\n    const handleMyEvent = (events) => {\n\n        console.log('Eventos: ', events);\n\n        console.log('Ativou o evento');\n    }\n\n    const renderSomething = (x) => {\n        if (x) {\n            return <h1> Posso renderizar isso</h1>\n        } else {\n            return <h1> Posso render isso aqui também</h1>\n        }\n    }\n\n    return (\n        <div>\n            <div>\n                <button onClick={handleMyEvent}>Clique</button>\n\n                <button onClick={() => { console.log('Clicou aqui mesmo'); }}>Clique aqui</button>\n\n                <button onClick={() => { //Com uma funcão dentro, começa deixar o código bagunçado, o ideal seria dividir com uma funções fora a lógica.\n                    if (true) {\n                        console.log('Clicou aqui porque pedi com educação');\n                    }\n                }}>Por favor clique aqui</button>\n            </div>\n            {renderSomething(true)/* Como eu quero que já execute assim que for carregado eu ja coloco o '()' junto a função*/}\n            {renderSomething(false)}\n        </div>\n    )\n\n}\n\nexport default Events;"],"mappings":";;AACA,MAAMA,MAAM,GAAGA,CAAA,KAAM;EAEjB,MAAMC,aAAa,GAAIC,MAAM,IAAK;IAE9BC,OAAO,CAACC,GAAG,CAAC,WAAW,EAAEF,MAAM,CAAC;IAEhCC,OAAO,CAACC,GAAG,CAAC,iBAAiB,CAAC;EAClC,CAAC;EAED,MAAMC,eAAe,GAAIC,CAAC,IAAK;IAC3B,IAAIA,CAAC,EAAE;MACH,oBAAOC,OAAA;QAAAC,QAAA,EAAI;MAAsB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAC1C,CAAC,MAAM;MACH,oBAAOL,OAAA;QAAAC,QAAA,EAAI;MAA8B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC;IAClD;EACJ,CAAC;EAED,oBACIL,OAAA;IAAAC,QAAA,gBACID,OAAA;MAAAC,QAAA,gBACID,OAAA;QAAQM,OAAO,EAAEZ,aAAc;QAAAO,QAAA,EAAC;MAAM;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAE/CL,OAAA;QAAQM,OAAO,EAAEA,CAAA,KAAM;UAAEV,OAAO,CAACC,GAAG,CAAC,mBAAmB,CAAC;QAAE,CAAE;QAAAI,QAAA,EAAC;MAAW;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC,eAElFL,OAAA;QAAQM,OAAO,EAAEA,CAAA,KAAM;UAAE;UACrB,IAAI,IAAI,EAAE;YACNV,OAAO,CAACC,GAAG,CAAC,sCAAsC,CAAC;UACvD;QACJ,CAAE;QAAAI,QAAA,EAAC;MAAqB;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAChC,CAAC,EACLP,eAAe,CAAC,IAAI,CAAC,+FACrBA,eAAe,CAAC,KAAK,CAAC;EAAA;IAAAI,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACtB,CAAC;AAGd,CAAC;AAAAE,EAAA,GAnCKd,MAAM;AAqCZ,eAAeA,MAAM;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}